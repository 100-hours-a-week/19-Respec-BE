name: Deploy Backend to EC2

on:
  push:
    branches:
      - stage

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: DB_URL,DB_USERNAME,DB_PASSWORD,JWT_SECRET,KAKAO_CLIENT_ID,KAKAO_CLIENT_SECRET,BACKEND_BASE_URL,FRONTEND_BASE_URL,AI_SERVER_URL
          script: |
            REPO_DIR=19-Respec-BE
            LOG_FILE=~/backend.log

            if [ ! -d "$REPO_DIR" ]; then
              git clone https://github.com/100-hours-a-week/19-Respec-BE.git
            fi

            cd $REPO_DIR
            git checkout stage
            git pull origin stage

            echo "üì¶ application.properties ÏÉùÏÑ± Ï§ë (envsubst Í∏∞Î∞ò)..."
            envsubst < src/main/resources/application-template.properties > src/main/resources/application.properties

            echo "‚òï JAVA_HOME ÏÑ§Ï†ï Ï§ë..."
            export JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))
            export PATH=$JAVA_HOME/bin:$PATH
            echo "‚úÖ JAVA_HOME: $JAVA_HOME"

            echo "üöÄ Spring Boot ÌîÑÎ°úÏ†ùÌä∏ ÎπåÎìú ÏãúÏûë (ÌÖåÏä§Ìä∏ ÏÉùÎûµ)..."
            ./gradlew clean build --no-daemon --refresh-dependencies -x test || { echo "‚ùå ÎπåÎìú Ïã§Ìå®"; exit 1; }

            JAR_FILE=$(find build/libs -name "*.jar" | head -n 1)

            if [ -z "$JAR_FILE" ]; then
              echo "‚ùå JAR ÌååÏùºÏùÑ Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§."
              exit 1
            fi

            echo "‚úÖ JAR ÌååÏùº Ï∞æÏùå: $(basename "$JAR_FILE")"

            echo "üîÅ Î∞±ÏóîÎìú ÏÑúÎ≤Ñ Ïû¨ÏãúÏûë..."
            EXISTING_PID=$(pgrep -f 'java -jar')
            if [ -n "$EXISTING_PID" ]; then
              echo "üõë Í∏∞Ï°¥ Î∞±ÏóîÎìú ÌîÑÎ°úÏÑ∏Ïä§ Ï¢ÖÎ£å (PID: $EXISTING_PID)"
              kill $EXISTING_PID
              sleep 2
            else
              echo "‚úÖ Ïã§Ìñâ Ï§ëÏù∏ Î∞±ÏóîÎìú ÏóÜÏùå"
            fi

            echo "üöÄ ÏÉàÎ°úÏö¥ Î∞±ÏóîÎìú Ïã§Ìñâ Ï§ë..."
            nohup java -jar "$JAR_FILE" --server.port=8080 --spring.profiles.active=auth,ai,no-spec-initialize,no-user-initialize > $LOG_FILE 2>&1 &

            echo "‚úÖ Î∞±ÏóîÎìú Ïã§Ìñâ ÏôÑÎ£å (Î°úÍ∑∏: $LOG_FILE)"
